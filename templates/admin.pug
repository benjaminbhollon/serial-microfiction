extends layout.pug

block variables
  - title = "Admin Dashboard"
  - metaDescription = "Manage your story and make sure everything runs smoothly."

block append head
  style.
    details {
      max-width: 700px;
    }
    .flash__content {
      padding: 0 1em;
    }

block content
  header: h1 Admin Dashboard
  section
    details
    //-
      summary Published Flashes (#{publishedFlashes.length.toLocaleString('en-us')})
      each flash in publishedFlashes
        article.flash(id='q' + flash._id.toString() data-md=flash.content)
          p.no-indent: em Release date: <span class='date'>#{flash.date}</span>
          p.no-indent: em Hits: #{flash.hits}
          .flash__content
            != md.render(flash.content)
          if flash.type !== 'flash'
            p.no-indent Type: #{flash.type}
            p.no-indent Label: #{flash.label}
          p.no-indent
            a.error(href="./flash/" + flash._id.toString() + "/delete") Delete
            |
            |
            a.warning(href="javascript:editFlash('" + flash._id.toString() + "')") Edit
    details
    //-
      summary Unpublished Flashes (#{unpublishedFlashes.length.toLocaleString('en-us')})
      each flash in unpublishedFlashes
        article.flash(id='q' + flash._id.toString() data-md=flash.content)
          p.no-indent: em Release date: <span class='date'>#{flash.date}</span>
          .flash__content
            != md.render(flash.content)
          if flash.type !== 'flash'
            p.no-indent Type: #{flash.type}
            p.no-indent Label: #{flash.label}
          p.no-indent
            a.error(href="./flash/" + flash._id.toString() + "/delete") Delete
            |
            |
            a.warning(href="javascript:editFlash('" + flash._id.toString() + "')") Edit
    details
      summary Stats
      ul
        li Published word count: #{publishedFlashes.length ? publishedFlashes.map(thisFlash => thisFlash.content).join('\n').split(/  \n| |\n\n/).length.toLocaleString('en-us') : 0}
        li Unpublished word count: #{unpublishedFlashes.length ? unpublishedFlashes.map(thisFlash => thisFlash.content).join('\n').split(/  \n| |\n\n/).length.toLocaleString('en-us') : 0}
        li Total hits: #{publishedFlashes.map(flash => flash.hits).reduce((a, b) => a + b, 0)}
        li Average hits: #{Math.round(publishedFlashes.map(flash => flash.hits).reduce((a, b) => a + b, 0) / publishedFlashes.length)}
        - flashesUntil = publishedFlashes.concat(unpublishedFlashes)[publishedFlashes.concat(unpublishedFlashes).length - 1]?.date
        li Flashes supplied through: #{flashesUntil} (#{new Date(flashesUntil).getTime() < Date.now() ? 0 : Math.round((new Date(flashesUntil).getTime() - Date.now()) / (1000*60*60*24))} days from now)
  section
    h2 Add flash
    form(method="POST" action="./flash/")
      label(for="flashContent") Full text:
      textarea#flashContent(name="content" placeholder="Add markdown, HTML, or a mix..." oninput="wordCount()" required)
      p
        span#words 0
        |  words
      label(for="flashDate") Publish date:
      input#flashDate(type="text" name="date" placeholder="yyyy-mm-dd (leave blank for default)")
      input(type="submit" value="Add")
  section
    h2 Add non-flash content
    form(method="POST" action="./non-flash/")
      label(for="nonFlashType") Type:
      input#nonFlashType(type="text" name="type" placeholder="hyphenated-plain-text" required)
      label(for="nonFlashLabel") Label:
      input#nonFlashLabel(type="text" name="label" placeholder="Plain text" required)
      label(for="nonFlashContent") Full text:
      textarea#nonFlashContent(name="content" placeholder="Add markdown, HTML, or a mix..." required)
      label(for="nonFlashDate") Publish date:
      input#flashDate(type="text" name="date" placeholder="yyyy-mm-dd (leave blank for default)")
      input(type="submit" value="Add")
  section
    h2#edit-flash Edit Flash
    p Click "Edit" on a flash above to edit it here.
    form#edit-flash__form.hidden(method="POST")
      label(for="flashContent--edit") Full text:
      textarea(name="content" id="flashContent--edit" placeholder="Add markdown, HTML, or a mix..." oninput="wordCount()")
      label(for="flashDate--edit") Publish date:
      input(type="text" name="date" id="flashDate--edit" placeholder="yyyy-mm-dd" required)
      input(type="submit" value="Update")
  section
    h2 Analytics
    a.button(href="/admin/cookie/dontHit/toggle") #{cookies.dontHit === 'true' ? 'Track my Hits' : 'Ignore my Hits'}
  section
    h2 Site Configuration
    - daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
    form(method="POST" action="/admin/config/update")
      label(for="configTitle") Book title:
      input#configTitle(type="text" name="title" placeholder="Plain text" value=config.title required)
      label(for="configSynopsis") Book synopsis:
      textarea#conficSynopsis(name="synopsis" placeholder = "Markdown, HTML, or a mix." required)
        = config.synopsis
      label(for="configAuthorName") Author name:
      input#configAuthorName(type="text" name="authorName" placeholder="Plain Text" value=config.author.name required)
      label(for="configAuthorAbout") About the author:
      textarea#configAuthorAbout(name="authorAbout" placeholder="Markdown, HTML, or a mix." required)
        = config.author.about
      label Released on:
      - dayNo = 0
      each day in daysOfWeek
        label(style='margin:0')
          input(type='checkbox' name='releasedOn-' + dayNo checked=(config.releasedOn.indexOf(dayNo) !== -1))
          | #{day}
        - dayNo += 1
      label(for="configCopyright") Copyright notice:
      input#configCopyright(type="text" name="copyright" placeholder='[[YEARS]] = story active years; [[AUTHOR]] = author\'s name.' value=config.copyright required)
      label(for="configStartYear") First year of publication:
      input#configStartYear(type="text" name="startYear" placeholder="YYYY" value=config.startYear required)
      h3 Subscription button messages
      label(for="configSubscriptionAllLabel") All updates label:
      input#configSubscriptionAllLabel(type="text" name="subscriptionAllLabel" value=config.subscription.all.label required)
      label(for="configSubscriptionAllLink") All updates link:
      input#configSubscriptionAllLink(type="url" name="subscriptionAllLink" value=config.subscription.all.link required)
      label(for="configSubscriptionWeeklyLabel") Weekly updates label:
      input#configSubscriptionWeeklyLabel(type="text" name="subscriptionWeeklyLabel" value=config.subscription.weekly.label required)
      label(for="configSubscriptionAllLink") Weekly updates link:
      input#configSubscriptionWeeklyLink(type="url" name="subscriptionWeeklyLink" value=config.subscription.weekly.link required)
      label(for="configSubscriptionNoneLabel") No updates label:
      input#configSubscriptionNoneLabel(type="text" name="subscriptionNoneLabel" value=config.subscription.none.label required)
      input(type="submit" value="Update Config")
      p.warning Warning: This will update these values across the entire site. There is no undo. If file changes are being watched, this will also restart the server.
  script.
    function wordCount() {
      document.getElementById("words").innerText = document.getElementById("flashContent").value.length ? document.getElementById("flashContent").value.split(/  \n| |\n\n/).length.toLocaleString('en-us') : 0;
    }
    function editFlash(id) {
      let form = document.getElementById('edit-flash__form');
      form.setAttribute('action', './flash/' + id + "/update");
      document.getElementById('flashContent--edit').innerHTML = document.getElementById('q' + id).dataset.md;
      document.getElementById('flashDate--edit').value = document.querySelector(`#q${id} .date`).innerText;
      form.style.display = 'block';
      location.href = '#edit-flash__form';
    }
